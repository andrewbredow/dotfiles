# REMINDER: Options can be found here: http://man.cx/tmux
set -g base-index 1
set -g renumber-windows on

set -g status-left " "
set -g status-right " #S@#h"

set-window-option -g window-status-format ' #I#F - #W '
set-window-option -g window-status-current-format ' #I#F - #W '

set -g status-justify left
set -g status-left-length 0
set -g status-right-length 40

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
set -g default-terminal "screen-256color"
setw -g mode-keys vi

set -sg escape-time 1

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Copy mode
bind-key ` copy-mode
unbind-key [
unbind-key p
bind-key p paste-buffer

bind-key -T copy-mode-vi v send-keys begin-selection
bind-key -T copy-mode-vi y send-keys copy-selection
bind-key -T copy-mode-vi Escape send-keys cancel

bind-key y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

source-file ~/.tmux.colors

bind-key r source-file ~/.tmux.conf

# Resize panes with arrow keys
bind-key Right resize-pane -R 8
bind-key Left resize-pane -L 8
bind-key Up resize-pane -U 4
bind-key Down resize-pane -D 4

# Split panes
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"

# Set window title
set -g set-titles on
set -g set-titles-string "#T"

# Open directory
bind c new-window -c "#{pane_current_path}"

